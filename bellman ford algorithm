def catMouseGame(graph):
    from functools import lru_cache

    @lru_cache(None)
    def dfs(mouse, cat, turn):
        if mouse == 0: return 1
        if mouse == cat: return 2
        if turn == 0:  # Mouse's turn
            for next_mouse in graph[mouse]:
                if next_mouse != cat and dfs(next_mouse, cat, 1) == 1:
                    return 1
            return 2
        else:  # Cat's turn
            for next_cat in graph[cat]:
                if next_cat != 0 and dfs(mouse, next_cat, 0) == 2:
                    return 2
            return 1

    return dfs(1, 2, 0)

print(catMouseGame([[2,5],[3],[0,4,5],[1,4,5],[2,3],[0,2,3]]))  
print(catMouseGame([[1,3],[0],[3],[0,2]]))                   
